[{"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\index.js":"1","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\reportWebVitals.js":"2","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\App.js":"3","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\redux-store.js":"4","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\News\\News.jsx":"5","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\app-reducer.js":"6","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\profile-reducer.js":"7","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\hoc\\withSuspense.js":"8","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\sidebar-reducer.js":"9","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\dialogs-reducer.js":"10","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\users-reducer.js":"11","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\auth-reducer.js":"12","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\common\\Preloader\\Preloader.js":"13","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Music\\Music.jsx":"14","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Login\\Login.jsx":"15","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Header\\HeaderContainer.jsx":"16","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Navbar\\Navbar.jsx":"17","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Settings\\Settings.jsx":"18","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Users\\UsersContainer.jsx":"19","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Dialogs\\DialogsContainer.jsx":"20","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\ProfileContainer.jsx":"21","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\api\\api.js":"22","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\users-selectors.js":"23","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\util\\object-helpers.js":"24","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\StoreComponent.js":"25","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\hoc\\AuthRedirect.js":"26","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\util\\validators\\validators.js":"27","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\common\\FormsControls\\FormsControls.js":"28","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Header\\Header.jsx":"29","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\Profile.jsx":"30","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Users\\Users.jsx":"31","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Dialogs\\Dialogs.jsx":"32","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Users\\User.jsx":"33","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"34","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\MyPosts\\MyPostContainer.jsx":"35","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\common\\Paginator\\Paginator.jsx":"36","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"37","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"38","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"39","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"40"},{"size":1046,"mtime":1612266440179,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":2446,"mtime":1612260641027,"results":"44","hashOfConfig":"42"},{"size":994,"mtime":1612186634088,"results":"45","hashOfConfig":"42"},{"size":212,"mtime":1609950250785,"results":"46","hashOfConfig":"42"},{"size":867,"mtime":1611765082437,"results":"47","hashOfConfig":"42"},{"size":3272,"mtime":1612366953667,"results":"48","hashOfConfig":"42"},{"size":267,"mtime":1612260931267,"results":"49","hashOfConfig":"42"},{"size":137,"mtime":1610469171926,"results":"50","hashOfConfig":"42"},{"size":999,"mtime":1611663960758,"results":"51","hashOfConfig":"42"},{"size":3647,"mtime":1612282553393,"results":"52","hashOfConfig":"42"},{"size":2277,"mtime":1612447982769,"results":"53","hashOfConfig":"42"},{"size":181,"mtime":1610975897849,"results":"54","hashOfConfig":"42"},{"size":270,"mtime":1609950753997,"results":"55","hashOfConfig":"42"},{"size":1830,"mtime":1612447912897,"results":"56","hashOfConfig":"42"},{"size":588,"mtime":1611761092880,"results":"57","hashOfConfig":"42"},{"size":1097,"mtime":1610816155914,"results":"58","hashOfConfig":"42"},{"size":216,"mtime":1609950838867,"results":"59","hashOfConfig":"42"},{"size":2310,"mtime":1612184674401,"results":"60","hashOfConfig":"42"},{"size":867,"mtime":1611663794409,"results":"61","hashOfConfig":"42"},{"size":1722,"mtime":1612355428214,"results":"62","hashOfConfig":"42"},{"size":2434,"mtime":1612448125738,"results":"63","hashOfConfig":"42"},{"size":809,"mtime":1612282457189,"results":"64","hashOfConfig":"42"},{"size":233,"mtime":1612176751223,"results":"65","hashOfConfig":"42"},{"size":264,"mtime":1610555374979,"results":"66","hashOfConfig":"42"},{"size":626,"mtime":1611495720720,"results":"67","hashOfConfig":"42"},{"size":249,"mtime":1611674562304,"results":"68","hashOfConfig":"42"},{"size":1117,"mtime":1612104596373,"results":"69","hashOfConfig":"42"},{"size":626,"mtime":1611753177276,"results":"70","hashOfConfig":"42"},{"size":631,"mtime":1612355337472,"results":"71","hashOfConfig":"42"},{"size":836,"mtime":1612283264329,"results":"72","hashOfConfig":"42"},{"size":2453,"mtime":1611679950275,"results":"73","hashOfConfig":"42"},{"size":2162,"mtime":1612283746493,"results":"74","hashOfConfig":"42"},{"size":2588,"mtime":1612367327924,"results":"75","hashOfConfig":"42"},{"size":1531,"mtime":1611668386937,"results":"76","hashOfConfig":"42"},{"size":651,"mtime":1612106283889,"results":"77","hashOfConfig":"42"},{"size":1215,"mtime":1612346291915,"results":"78","hashOfConfig":"42"},{"size":1575,"mtime":1612365469904,"results":"79","hashOfConfig":"42"},{"size":394,"mtime":1610101821153,"results":"80","hashOfConfig":"42"},{"size":1443,"mtime":1612365181835,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"hpcurh",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"84"},"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\index.js",[],["182","183"],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\reportWebVitals.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\App.js",["184","185"],"import { Component } from 'react';\nimport { connect, Provider } from 'react-redux';\nimport {  Route, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport './App.css';\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport Music from './components/Music/Music';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News.jsx';\n//import ProfileContainer from './components/Profile/ProfileContainer';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport {initializeApp} from './components/redux/app-reducer'\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './components/redux/redux-store';\nimport React from 'react';\nimport { withSuspense } from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nclass App extends Component {\n  componentDidMount(){\n    this.props.initializeApp();\n }\n \n  render () {\n    if (!this.props.initialized){\n    return <Preloader />\n  }\n  return (\n\n          <div className='app-wrapper'>\n                <HeaderContainer />\n                <Navbar />\n                <div className='app-wrapper-content'>\n                <Route path='/login' render={ () => <LoginPage  /> } />\n                <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\n                <Route path='/dialogs'\n                 render={ () => {\n                  return <React.Suspense fallback={<div>Loading...</div>}>\n                 <DialogsContainer  />\n                 </React.Suspense>\n                } } />\n                <Route path='/users' render={ () => <UsersContainer /> } />\n                <Route path='/news' render={ () => <News /> } />\n                <Route path='/music' render={ () => <Music /> } />\n                <Route path='/settings' render={ () => <Settings /> } />\n                \n                </div>\n            </div>\n\n  )\n  }\n}\n\n\n// export default App;\n\n\nconst mapStateToProps = (state) =>({\n  initialized: state.app.initialized\n})\n\nexport default compose (\n  withRouter,\n  connect(mapStateToProps, {initializeApp}))(App);\n\n","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\redux-store.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\News\\News.jsx",["186"],"import newsImage from './../../images/cnn-news18-india-network18.png';\r\n\r\nconst News = () =>{\r\n    return (\r\n        <div>\r\n            <img src={newsImage}></img>\r\n        </div>\r\n    )\r\n};\r\nexport default News;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\app-reducer.js",["187","188"],"import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../../api/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState,action) =>{\r\n\r\n    switch (action.type){\r\n        case INITIALIZED_SUCCESS:\r\n          return {\r\n            ...state,\r\n            initialized: true\r\n          }\r\n        \r\n        default :\r\n          return state;\r\n        }\r\n        \r\n    }\r\n\r\n\r\nexport const initializedSuccess  = () => ({ type : INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  // dispatch(getAuthUserData());\r\n  Promise.all([promise])\r\n    .then(() => {\r\n     dispatch(initializedSuccess());\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\profile-reducer.js",["189"],"import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nlet initialState = {\r\n  postData : [\r\n      {id: 1, message: 'Hi, how are you?' , likesCount: 11},\r\n      {id: 1, message: \"It's my first post\", likesCount: 12},\r\n    ],\r\n  profile: null,\r\n  status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState,action) =>{\r\n\r\n    switch (action.type){\r\n      case ADD_POST: {\r\n          let newPost = {\r\n            id: 5,\r\n            message: action.newPostText,\r\n            likesCount:0\r\n        };\r\n        return {\r\n          ...state,\r\n          postData: [...state.postData,newPost],\r\n          newPostText: \"\"\r\n          };\r\n      }\r\n      case SET_STATUS : {\r\n        return {\r\n          ...state,\r\n          status: action.status      \r\n        };\r\n      }\r\n      case SET_USER_PROFILE: {\r\n        return {...state, profile: action.profile}\r\n      }\r\n      case DELETE_POST:\r\n        return {...state, postData:state.postData.filter(p => p.id != action.postId )}\r\n      case SAVE_PHOTO_SUCCESS:\r\n        return {...state, profile: {...state.profile, photos: action.photos}}\r\n    default :\r\n        return state;\r\n        }\r\n    }\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type : ADD_POST ,newPostText})\r\nexport const setUserProfile = (profile) => ({ type : SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type : SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ tupe: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await usersAPI.getProfile(userId)\r\n\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) =>  async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) {\r\n     dispatch(setStatus(status));\r\n    }\r\n\r\n }\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  let response = await profileAPI.savePhoto(file)\r\n\r\n    if (response.data.resultCode === 0) {\r\n     dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n\r\n }\r\n\r\n export const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n     dispatch(getUserProfile(userId));\r\n    }else {\r\n      dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n      return Promise.reject(response.data.messages[0])\r\n    }\r\n\r\n }\r\n\r\n//  export const updateStatus = (newPostBody) => (dispatch) => {\r\n//   profileAPI.updateStatus(newPostBody)\r\n//   .then(response => {\r\n//     if (response.data.resultCode === 0) {\r\n//      dispatch(addPostActionCreator(newPostBody));\r\n//     }\r\n//  });\r\n//  }\r\n\r\n\r\nexport default profileReducer;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\hoc\\withSuspense.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\sidebar-reducer.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\dialogs-reducer.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\users-reducer.js",["190","191","192","193"],"import { updateObjectInArray } from '../../util/object-helpers';\r\nimport {usersAPI} from './../../api/api'\r\nimport { getUsers } from './users-selectors';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n  users : [],\r\n  pageSize: 5,\r\n  totalUsersCount : 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case FOLLOW:\r\n          return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users,action.userId, \"id\",{followed: true})\r\n\r\n          }\r\n        case UNFOLLOW:\r\n          return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users,action.userId, \"id\",{followed: false})\r\n          }\r\n          case SET_USERS:{\r\n            return {...state, users: action.users}\r\n          }\r\n          case SET_CURRENT_PAGE:{\r\n            return {...state, currentPage: action.currentPage}\r\n          }\r\n          case SET_TOTAL_USERS_COUNT:{\r\n            return {...state, totalUsersCount: action.count}\r\n          }\r\n          case TOGGLE_IS_FETCHING:{\r\n            return {...state, isFetching: action.isFetching}\r\n          }\r\n          ;case TOGGLE_IS_FOLLOWING_PROGRESS:{\r\n\r\n            return {\r\n              ...state,\r\n               followingInProgress: action.isFetching \r\n               ? [...state.followingInProgress, action.userId] \r\n               : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n          }\r\n        default :\r\n          return state;\r\n        }\r\n        \r\n    }\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type : FOLLOW ,userId});\r\nexport const unfollowSuccess = (userId) => ({ type : UNFOLLOW,userId });\r\nexport const setUsers = (users) => ({ type : SET_USERS,users });\r\nexport const setCurrentPage = (currentPage) => ({ type : SET_CURRENT_PAGE,currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type : SET_TOTAL_USERS_COUNT,count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type : TOGGLE_IS_FETCHING,isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type : TOGGLE_IS_FOLLOWING_PROGRESS,isFetching , userId});\r\n//window.state = initialState; \r\n\r\nexport const requestUsers = (page,pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n            let data = await usersAPI.getUsers(page, pageSize)\r\n\r\n              dispatch(toggleIsFetching(false));\r\n              dispatch(setUsers(data.items));\r\n              dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n  }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId,apiMethod,actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n\r\n      if (response.data.resultCode == 0) {\r\n          dispatch(actionCreator(userId));\r\n      }\r\n      dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId,usersAPI.follow.bind(usersAPI),followSuccess);\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId,usersAPI.unfollow.bind(usersAPI),unfollowSuccess);\r\n  }\r\n}\r\n\r\nexport default usersReducer;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\auth-reducer.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\common\\Preloader\\Preloader.js",["194"],"import preloader from '../../../images/preloader.svg';\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\nexport default Preloader;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Music\\Music.jsx",["195"],"import musicImage from './../../images/disc-jockey-graphy-speaker-trend-electronics-computer-wallpaper-recording-studio.png';\r\n\r\nconst Music = () =>{\r\n    return (\r\n        <div>\r\n            <img src={musicImage}></img>\r\n        </div>\r\n    )\r\n};\r\nexport default Music;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Login\\Login.jsx",["196","197"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from '../../util/validators/validators';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport {login} from './../redux/auth-reducer'\r\nimport style from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit,error,captchaUrl}) =>{\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n          \r\n            {createField(\"Email\",\"email\",[required],Input)}\r\n            {createField(\"Password\",\"password\",[required],Input,{type:\"password\"})}\r\n            {createField(null,\"rememberMe\",[],Input,{type:\"checkbox\"},\"remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField(\"Symbols from image\",\"captcha\",[required],Input,{}) }\r\n          \r\n               { error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div>\r\n                     <button>Login</button>\r\n                </div>\r\n            </form>\r\n         )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm ({form: 'login'}) (LoginForm)\r\n\r\nconst Login = (props) =>{\r\n\r\n    const onSubmit = (formData) =>{\r\n        props.login(formData.email,formData.password,formData.rememberMe,formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div> \r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm  onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n         </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth : state.auth.isAuth\r\n})\r\nexport default connect (mapStateToProps,{login}) (Login);","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Header\\HeaderContainer.jsx",["198","199"],"import React from 'react';\r\nimport Header from './Header';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from './../redux/auth-reducer'\r\nimport { authAPI } from '../../api/api';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n//   componentDidMount(){\r\n//    this.props.getAuthUserData();\r\n// }\r\n\r\n  render () {\r\n    return <Header {...this.props} /> \r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\nexport default  connect (mapStateToProps,{logout}) (HeaderContainer);","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Settings\\Settings.jsx",["200"],"import settingsImage from './../../images/settings-image.jpg';\r\n\r\nconst Settings = () =>{\r\n    return (\r\n        <div>\r\n            <img src={settingsImage}></img>\r\n        </div>\r\n    )\r\n};\r\nexport default Settings;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Users\\UsersContainer.jsx",["201","202","203","204","205"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { follow, setUsers, unfollow, setCurrentPage,setTotalUsersCount, toggleIsFetching,toggleFollowingProgress,requestUsers} from '../redux/users-reducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from './../common/Preloader/Preloader';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getUsers,getPageSize,getTotalUsersCount,getCurrentPage,getIsFetching,getFollowingInProgress,getUsersSuperSelector } from '../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount(){\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) =>{\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize)\r\n        \r\n    }\r\n\r\n    render  (){\r\n                return <>\r\n                {this.props.isFetching ? <Preloader /> : null }\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        followingInProgress={this.props.followingInProgress}\r\n\r\n                \r\n                \r\n                />  \r\n                </>\r\n            }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        //users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose (\r\n    withAuthRedirect,\r\n    connect (mapStateToProps,{\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        getUsers: requestUsers\r\n    }),\r\n)(UsersContainer)\r\n","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Dialogs\\DialogsContainer.jsx",["206","207","208"],"import React from 'react';\r\n//import avatar from './../../images/avatar.png';\r\n//import style from './Dialogs.module.css';\r\nimport {sendMessageCreator} from '../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport StoreContext from '../../StoreComponent';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport ProfileContainer from '../Profile/ProfileContainer';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        sendMessage : (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\ProfileContainer.jsx",["209","210","211","212","213"],"import React from 'react';\r\nimport Profile from'./Profile';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile,getStatus,updateStatus, savePhoto,saveProfile } from '../redux/profile-reducer'\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId){\r\n      userId = this.props.authoriseduserId;\r\n      if (!userId){\r\n         this.props.history.push(\"/login\")\r\n     }\r\n    }\r\n this.props.getUserProfile(userId);\r\n this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.refreshProfile();\r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevState, snapshot){\r\n  if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n    this.refreshProfile();\r\n  }\r\n  \r\n}\r\n    render() {\r\n     \r\n        return (\r\n          <Profile  {...this.props} \r\n          isOwner={!this.props.match.params.userId}\r\n          profile={this.props.profile} \r\n          status={this.props.status} \r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto}\r\n          />\r\n        )\r\n      }\r\n} ;\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authoriseduserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\nexport default compose (\r\n  connect (mapStateToProps, {getUserProfile,getStatus,updateStatus,savePhoto,saveProfile}),\r\n  withRouter,\r\n  //withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\api\\api.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\redux\\users-selectors.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\util\\object-helpers.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\StoreComponent.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\hoc\\AuthRedirect.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\util\\validators\\validators.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\common\\FormsControls\\FormsControls.js",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Users\\Users.jsx",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Dialogs\\Dialogs.jsx",["214","215","216","217","218"],"import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport avatar from './../../images/avatar.png';\r\nimport style from './Dialogs.module.css';\r\nimport {sendMessageCreator,updateNewMessageBodyCreator} from '../../components/redux/dialogs-reducer'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../util/validators/validators';\r\n\r\n\r\nconst DialogItem = (props) =>{\r\n    return (\r\n        <div className={style.dialogs + \" \" + style.active}>\r\n        <img src={avatar} />\r\n        <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n       </div>\r\n    )\r\n}\r\n\r\nconst Message = (props) =>{\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props) =>{\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let newMessageElement = React.createRef();\r\n\r\n    let addMessage = () =>{\r\n        let text = newMessageElement.current.value;\r\n        alert(text);\r\n    }\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} /> );\r\n    let messagesElements = state.messagesData.map(message => <Message message={message.message} id={message.id} key={message.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} /> ;\r\n    return (\r\n        <div className={style.dialogs}>\r\n           <div className ={style.dialogsItems}>\r\n                {dialogsElements}\r\n           </div>\r\n           <div className ={style.messages}>\r\n           {messagesElements}\r\n                \r\n           </div>\r\n           <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLengthCreator50 = maxLengthCreator(50)\r\nconst AddMessageForm =(props) =>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div> \r\n            <Field component={Textarea} \r\n            name='newMessageBody' \r\n            placeholder='Enter your message'\r\n            validate={[required,maxLengthCreator50]}\r\n            />\r\n        </div>\r\n        <div><button >Send</button></div>\r\n   </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Users\\User.jsx",["219","220","221","222"],"import React from 'react';\r\nimport styles from './users.module.css';\r\nimport * as axios from 'axios';\r\nimport userAvatar from '../../assets/images/avatar.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { usersAPI } from '../../api/api';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\n\r\nlet User = ({user,followingInProgress,unfollow,follow}) =>{\r\n    \r\n                    return ( \r\n                    <div>\r\n                        <span>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + user.id}>\r\n                                    <img src={user.photos.small != null ? user.photos.small : userAvatar} \r\n                                    className={styles.userPhoto}\r\n                                    /> \r\n                                </NavLink>\r\n                                    \r\n                            </div>   \r\n                            <div>\r\n                            {user.followed \r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                onClick={ () => {\r\n                                unfollow(user.id) }}>\r\n                                Unfollow</button> \r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                onClick={ () => {\r\n                                follow( user.id)}}>\r\n                                    Follow</button>}\r\n                            </div>\r\n                        </span>\r\n                        <span>\r\n                            <span>\r\n                                <div>{user.name}</div>\r\n                                <div>{user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"u.location.country\"}</div>\r\n                                <div>{\"u.location.city\"}</div>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                   \r\n            )\r\n        }\r\ndebugger;\r\nexport default User;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["223"],"import Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userAvatar from './../../../assets/images/avatar.png' \r\nimport style from './../Profile.module.css'\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm'\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let  [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile){\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) =>{\r\n       if(e.target.files.length){\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) =>{\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div>  \r\n                {/*<img src={motorstorm} alt='motor' />*/}\r\n            </div>\r\n            <div>\r\n                <img src={profile.photos.large || userAvatar} className={style.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n                {editMode \r\n                ? <ProfileDataForm initialValues={profile} profile={profile}  onSubmit={onSubmit}/> \r\n                : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner} />}\r\n                \r\n                <ProfileStatusWithHooks \r\n                status={status} \r\n                updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n  )\r\n} ;\r\n\r\nconst ProfileData = ({profile,isOwner,goToEditMode}) => {\r\n    return <div>\r\n        <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        </div>\r\n    <div>\r\n        <b>Full name</b> : {profile.fullName}\r\n        \r\n    </div>\r\n    <div>\r\n        <b>Looking for a job</b> : {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n    <div>\r\n        <b>My professionals skills</b>  {profile.lookingForAJobDescription}\r\n       \r\n    </div>\r\n    }\r\n    <div>\r\n        <b>About me</b> :{profile.aboutMe}\r\n       \r\n    </div>\r\n    <div>\r\n        <b>Contacts</b> :{Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n    </div>\r\n</div>\r\n}\r\n\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={style.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\MyPosts\\MyPostContainer.jsx",["224","225","226"],"import style from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport React from 'react';\r\nimport {addPostActionCreator} from '../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts';\r\n//import StoreContext from '../../../StoreComponent';\r\nimport { connect } from 'react-redux';\r\n\r\n// const MyPostsContainer = () => {\r\n//   // let state = props.store.getState();\r\n//     return  (\r\n//       <StoreContext.Consumer>\r\n//         {\r\n//         (store) => {\r\n//           let state = store.getState();\r\n//           let addPost = () => {\r\n//             store.dispatch(addPostActionCreator());\r\n//           }\r\n        \r\n//           let onPostChange = (text) =>{\r\n//             let action = updateNewPostTextActionCreator(text);\r\n//             store.dispatch(action);\r\n//           }\r\n\r\n//         return <MyPosts  updateNewPostText={onPostChange} \r\n//           addPost={addPost} \r\n//           postData={state.profilePage.postData}\r\n//           newPostText={state.profilePage.newPostText}/>\r\n//           }\r\n//         }   \r\n//          </StoreContext.Consumer>\r\n//     )\r\n// } ;\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return {\r\n    postData: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n      addPost: (newPostText) => {\r\n        dispatch(addPostActionCreator(newPostText));\r\n      }\r\n\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\common\\Paginator\\Paginator.jsx",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["227"],"import style from './Post.module.css';\r\nimport avatar from './../../../../images/avatar.png';\r\nconst Post = (props) => {\r\n    return  (\r\n        <div className={style.item}>\r\n          <img src={avatar} />\r\n          {props.message}\r\n          <div>\r\n            <span>Like {props.likesCount} </span>\r\n          </div>\r\n        </div>\r\n    )\r\n} ;\r\n\r\nexport default Post;\r\n//console.log(Post());","C:\\Users\\fort2\\Новая папка\\Рабочий стол\\ReactJs\\samurai-course\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["228","229","230"],"import style from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport React from 'react';\r\nimport {addPostActionCreator,updateNewPostTextActionCreator} from './../../redux/profile-reducer'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../util/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = props.postData\r\n  .map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount} />)\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    //alert(values + 'buttonclick')\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n\r\n    return  (\r\n    <div>\r\n      <h3>My posts</h3>\r\n      <MyNewPostFormRedux onSubmit={onAddPost} />\r\n      <div>{postsElements}</div>\r\n    </div>\r\n    )\r\n} ;\r\n\r\nconst MyNewPostForm = (props) =>{\r\n  return (<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n        <Field  name='newPostText' \r\n        component={Textarea}\r\n        placeholder={\"\"}\r\n        validate={[required, maxLength10]}\r\n        />\r\n        <div>\r\n          <button>Add</button>\r\n        </div>\r\n      </div>\r\n      <div className={style.posts}>\r\n      </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nlet MyNewPostFormRedux = reduxForm({form:'ProfileMyNewPostForm'})(MyNewPostForm)\r\n\r\nexport default MyPosts;",{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":2,"column":19,"nodeType":"237","messageId":"238","endLine":2,"endColumn":27},{"ruleId":"235","severity":1,"message":"239","line":17,"column":8,"nodeType":"237","messageId":"238","endLine":17,"endColumn":13},{"ruleId":"240","severity":1,"message":"241","line":6,"column":13,"nodeType":"242","endLine":6,"endColumn":34},{"ruleId":"235","severity":1,"message":"243","line":1,"column":10,"nodeType":"237","messageId":"238","endLine":1,"endColumn":20},{"ruleId":"235","severity":1,"message":"244","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":43,"column":68,"nodeType":"247","messageId":"248","endLine":43,"endColumn":70},{"ruleId":"235","severity":1,"message":"249","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":18},{"ruleId":"250","severity":1,"message":"251","line":45,"column":35,"nodeType":"252","messageId":"253","endLine":47,"endColumn":12},{"ruleId":"245","severity":1,"message":"246","line":54,"column":60,"nodeType":"247","messageId":"248","endLine":54,"endColumn":62},{"ruleId":"245","severity":1,"message":"254","line":91,"column":36,"nodeType":"247","messageId":"248","endLine":91,"endColumn":38},{"ruleId":"240","severity":1,"message":"241","line":6,"column":9,"nodeType":"242","endLine":6,"endColumn":32},{"ruleId":"240","severity":1,"message":"241","line":6,"column":13,"nodeType":"242","endLine":6,"endColumn":35},{"ruleId":"235","severity":1,"message":"255","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":18,"column":28,"nodeType":"242","endLine":18,"endColumn":52},{"ruleId":"235","severity":1,"message":"256","line":3,"column":13,"nodeType":"237","messageId":"238","endLine":3,"endColumn":18},{"ruleId":"235","severity":1,"message":"244","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":6,"column":13,"nodeType":"242","endLine":6,"endColumn":38},{"ruleId":"235","severity":1,"message":"257","line":3,"column":53,"nodeType":"237","messageId":"238","endLine":3,"endColumn":71},{"ruleId":"235","severity":1,"message":"258","line":3,"column":73,"nodeType":"237","messageId":"238","endLine":3,"endColumn":89},{"ruleId":"235","severity":1,"message":"256","line":4,"column":13,"nodeType":"237","messageId":"238","endLine":4,"endColumn":18},{"ruleId":"235","severity":1,"message":"259","line":7,"column":10,"nodeType":"237","messageId":"238","endLine":7,"endColumn":18},{"ruleId":"235","severity":1,"message":"260","line":10,"column":102,"nodeType":"237","messageId":"238","endLine":10,"endColumn":123},{"ruleId":"235","severity":1,"message":"261","line":1,"column":8,"nodeType":"237","messageId":"238","endLine":1,"endColumn":13},{"ruleId":"235","severity":1,"message":"262","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":20},{"ruleId":"235","severity":1,"message":"263","line":9,"column":8,"nodeType":"237","messageId":"238","endLine":9,"endColumn":24},{"ruleId":"235","severity":1,"message":"256","line":3,"column":13,"nodeType":"237","messageId":"238","endLine":3,"endColumn":18},{"ruleId":"235","severity":1,"message":"264","line":6,"column":9,"nodeType":"237","messageId":"238","endLine":6,"endColumn":17},{"ruleId":"235","severity":1,"message":"259","line":7,"column":10,"nodeType":"237","messageId":"238","endLine":7,"endColumn":18},{"ruleId":"235","severity":1,"message":"265","line":8,"column":10,"nodeType":"237","messageId":"238","endLine":8,"endColumn":26},{"ruleId":"245","severity":1,"message":"246","line":30,"column":38,"nodeType":"247","messageId":"248","endLine":30,"endColumn":40},{"ruleId":"235","severity":1,"message":"266","line":5,"column":9,"nodeType":"237","messageId":"238","endLine":5,"endColumn":27},{"ruleId":"235","severity":1,"message":"267","line":5,"column":28,"nodeType":"237","messageId":"238","endLine":5,"endColumn":55},{"ruleId":"240","severity":1,"message":"241","line":14,"column":9,"nodeType":"242","endLine":14,"endColumn":29},{"ruleId":"235","severity":1,"message":"268","line":35,"column":9,"nodeType":"237","messageId":"238","endLine":35,"endColumn":19},{"ruleId":"235","severity":1,"message":"269","line":42,"column":9,"nodeType":"237","messageId":"238","endLine":42,"endColumn":23},{"ruleId":"235","severity":1,"message":"256","line":3,"column":13,"nodeType":"237","messageId":"238","endLine":3,"endColumn":18},{"ruleId":"235","severity":1,"message":"259","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"235","severity":1,"message":"270","line":7,"column":8,"nodeType":"237","messageId":"238","endLine":7,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":17,"column":37,"nodeType":"242","endLine":19,"endColumn":39},{"ruleId":"240","severity":1,"message":"241","line":38,"column":17,"nodeType":"242","endLine":38,"endColumn":92},{"ruleId":"235","severity":1,"message":"271","line":1,"column":8,"nodeType":"237","messageId":"238","endLine":1,"endColumn":13},{"ruleId":"235","severity":1,"message":"272","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":12},{"ruleId":"235","severity":1,"message":"261","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":13},{"ruleId":"240","severity":1,"message":"241","line":6,"column":11,"nodeType":"242","endLine":6,"endColumn":31},{"ruleId":"235","severity":1,"message":"273","line":4,"column":9,"nodeType":"237","messageId":"238","endLine":4,"endColumn":29},{"ruleId":"235","severity":1,"message":"274","line":4,"column":30,"nodeType":"237","messageId":"238","endLine":4,"endColumn":60},{"ruleId":"235","severity":1,"message":"275","line":16,"column":7,"nodeType":"237","messageId":"238","endLine":16,"endColumn":21},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'stopSubmit' is defined but never used.","'authAPI' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getUsers' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","Expected '===' and instead saw '=='.","'Field' is defined but never used.","'axios' is defined but never used.","'setTotalUsersCount' is defined but never used.","'toggleIsFetching' is defined but never used.","'usersAPI' is defined but never used.","'getUsersSuperSelector' is defined but never used.","'React' is defined but never used.","'StoreContext' is defined but never used.","'ProfileContainer' is defined but never used.","'Redirect' is defined but never used.","'withAuthRedirect' is defined but never used.","'sendMessageCreator' is defined but never used.","'updateNewMessageBodyCreator' is defined but never used.","'addMessage' is assigned a value but never used.","'newMessageBody' is assigned a value but never used.","'Paginator' is defined but never used.","'style' is defined but never used.","'Post' is defined but never used.","'addPostActionCreator' is defined but never used.","'updateNewPostTextActionCreator' is defined but never used.","'newPostElement' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]